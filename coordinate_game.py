from ursina import *
import os

app = Ursina()
# make the game fullscreen
window.fullscreen = True

# --- Lighting ---
DirectionalLight(shadows=True, rotation=(45, -45, 45))
AmbientLight(color=color.rgba(100, 100, 100, 0.5))

# --- Constants ---
cam_move_speed = 10
cam_zoom_speed = 5
cam_min_fov = 5
cam_max_fov = 120
indicator_move_speed = 10
COORDS_FILENAME = 'indicator_coordinates.txt'
LINE_HEIGHT = 1 # Define the desired height for the lines
LINE_THICKNESS = 2 # Define the thickness of the lines for visibility

# --- Helper Functions ---
def clamp(val, min_val, max_val):
    return max(min_val, min(val, max_val))

def parse_coords_string(coords_str, height=0):
    """Converts a multiline string of 'x z' coordinates into a list of Vec3 objects at a given height."""
    points = []
    for line in coords_str.strip().split('\n'):
        if line.strip(): # Ignore empty lines
            try:
                x_str, z_str = line.split()
                points.append(Vec3(float(x_str), height, float(z_str))) # Set y to the specified height
            except ValueError:
                print(f"Warning: Could not parse line '{line}'. Skipping.")
                continue
    return points

# --- Entities ---
city = Entity(
    model='models/map.glb',
    scale=1.6,
    position=(0, 0, 0)
)

indicator = Entity(
    model='sphere',
    color=color.yellow,
    scale=0.1,
    position=(41, city.position.y + 1, -26.06), # Indicator remains at y=1
    rotation=(0,0,0)
)

coordinate_display_text = Text(
    text='<b>X: 0.0, Z: 0.0</b>',
    position=(0, -0.45),
    origin=(0, 0),
    scale=3.0,
    color=color.white,
    background=True,
    parent=camera.ui
)

confirmation_text = None # Placeholder for the confirmation message

# --- Zone Coordinates ---
coords_str_1 = """
-6.1 0.5
-7.5 -0.4
-8.3 -1.2
-12.8 -6.6
-14.5 -8.4
-16.5 -10.3
-18.0 -11.3
-19.1 -11.9
-22.0 -12.8
-25.8 -13.4
-29.0 -13.5
-32.1 -13.2
-33.9 -12.8
-35.1 -12.4
-36.6 -11.4
-41.3 -1.9
-41.4 -0.8
-42.2 0.5
-38.2 54.3
-38.23 54.36  
-38.09 55.46  
-35.46 60.09  
-35.32 60.09  
-34.59 59.96  
-34.42 60.19  
-33.82 61.03  
-33.29 61.73  
-32.79 62.43  
-32.39 62.96  
-31.76 63.66  
-31.19 64.29  
-30.89 64.63  
-30.52 64.93  
-30.16 65.23  
-29.69 65.60  
-29.22 65.90  
-28.66 66.14  
-28.09 66.33  
-27.72 66.43  
-27.19 66.43  
-26.62 66.37  
-26.26 66.30  
-25.72 66.06  
-24.99 65.63  
-24.13 64.86  
-23.20 63.86  
-21.76 61.93  
-20.20 59.53  
-20.23 58.13  
-19.33 58.13
-19.3 53.7
-21.8 45.9
-32.7 34.7
-34.7 32.0
-35.2 31.2
-35.5 30.5
-36.8 25.6
-37.1 22.4
-37.0 21.2
-36.7 19.1
-36.2 17.7
-35.6 16.3
-31.2 11.2
-25.7 7.9
-25.18 7.48
-23.72 6.61
-22.35 5.95
-20.98 5.45
-19.18 5.32
-17.35 5.52
-16.98 5.62
-15.45 6.02
-13.98 6.69
-12.62 7.45
-11.29 8.48
-9.56 10.08
-8.99 10.65
-8.32 10.79
-7.05 11.82
-6.40 12.55
-4.37 16.59
-3.43 17.15
-2.33 19.42
0.30 24.52
0.24 25.78
0.57 26.48
2.01 29.45
2.94 31.32
3.84 33.25
4.22 34.02
7.76 44.51
8.22 45.38
10.04 49.05
10.23 49.50
12.61 54.21
12.96 54.66
13.62 54.80
14.61 55.35
15.80 56.54
17.61 58.65
19.46 60.35
22.44 62.37
25.04 63.52
26.62 63.92
29.59 64.28
31.34 65.24
33.84 65.20
38.41 65.07
40.17 65.00
47.09 63.89
52.76 62.98
53.81 62.41
54.24 60.88
55.91 59.94
57.45 59.00
59.52 57.71
61.45 56.25
63.10 54.82
64.46 53.31
65.56 51.78
66.28 50.65
66.65 49.93
67.69 47.74
68.40 45.78
69.42 42.25
69.99 39.66
70.49 36.70
71.09 32.53
70.93 30.03
72.07 28.83
71.91 26.10
71.56 21.86
71.16 16.70
70.77 11.69
70.47 7.26
70.22 5.01
67.55 0.83
66.03 -3.13
65.99 -5.27
65.85 -8.37
65.79 -12.90
66.16 -13.84
66.42 -14.36
66.42 -15.73
66.42 -16.83
66.29 -20.63
66.16 -24.83
66.06 -28.83
67.06 -33.13
65.97 -36.29
65.63 -36.83
64.92 -37.89
64.35 -38.83
64.02 -39.22
63.22 -40.16
62.32 -40.85
61.15 -41.72
59.76 -42.76
58.89 -43.27
58.26 -43.46
56.66 -43.90
54.82 -44.30
52.89 -44.33
51.45 -44.13
50.09 -43.63
48.55 -42.83
48.22 -42.70
46.78 -42.20
45.92 -41.77
44.85 -41.10
42.78 -40.50
41.61 -39.86
40.34 -39.36
38.41 -38.93
35.84 -38.66
34.34 -38.49
32.91 -38.49
31.01 -38.93
29.81 -39.40
27.54 -40.43
26.47 -40.98
20.60 -46.65
19.53 -46.82
18.47 -47.42
15.57 -50.08
13.17 -51.61
9.27 -54.08
4.94 -56.85
-0.13 -60.25
-1.27 -61.21
-2.04 -62.51
-25.40 -72.18
-31.87 -70.38
-35.73 -68.55
-38.00 -66.61
-39.43 -64.21
-40.26 -61.37
-40.33 -57.77
-40.09 -53.91
-39.42 -52.01
-37.82 -49.24
-36.66 -48.05
-36.12 -47.62
-35.19 -46.88
-29.95 -43.25
-28.48 -42.82
-19.51 -40.58
-12.38 -38.78
-5.12 -36.91
0.92 -35.41
3.65 -34.71
6.92 -33.92
9.68 -34.35
13.98 -34.09
19.32 -33.69
24.82 -33.23
26.92 -32.36
27.96 -32.13
29.59 -31.60
34.31 -29.53
41.01 -26.06
42.94 -24.99
48.27 -22.22
52.37 -19.66
55.44 -17.19
57.67 -14.89
59.00 -13.26
60.27 -11.32
61.04 -9.82
61.74 -8.03
62.37 -5.79
62.63 -4.43
62.76 -1.92
62.93 1.27
62.99 4.17
63.03 6.74
63.86 8.14
63.96 12.01
64.06 15.47
64.16 19.60
64.26 23.84
64.37 27.84
64.43 30.44
64.43 32.00
64.37 33.47
64.23 35.30
64.20 35.94
64.00 36.60
63.67 37.67
63.37 38.47
63.00 39.20
62.43 40.20
61.73 41.44
61.06 42.44
60.36 43.47
59.76 44.30
59.43 44.77
59.36 46.07
58.39 47.50
57.49 48.64
56.76 49.54
56.09 50.34
55.36 51.04
53.96 50.30
52.93 51.30
51.66 52.37
49.56 53.77
48.30 54.60
46.77 55.44
45.14 56.04
43.37 56.40
41.50 56.67
39.87 56.77
38.53 56.77
37.20 56.77
35.97 56.66
34.33 56.46
33.07 56.20
31.50 55.80
29.50 55.27
27.87 54.80
26.93 54.43
25.47 53.37
23.47 52.03
21.91 50.69
19.87 48.68
18.24 46.75
16.47 44.48
14.51 41.65
13.57 40.35
11.67 37.11
10.71 35.25
9.74 33.31
8.01 31.52
6.61 28.85
5.14 25.92
4.07 23.92
3.31 22.15
2.41 20.22
1.64 18.48
0.71 16.45
-0.26 14.52
-1.42 12.15
-2.18 10.45
-2.55 9.52
-2.05 8.95
-2.79 7.35
-3.79 5.34
-4.85 2.97
-5.29 2.21
-5.89 0.81
-6.05 0.57
"""

coords_str_2 = """
-19.09 24.12
-18.12 27.18
-18.79 27.35
-18.59 28.25
-17.79 30.88
-16.99 33.45
-16.42 35.48
-15.26 39.98
-14.76 41.95
-14.12 42.88
-13.92 43.42
-13.75 43.98
-13.59 44.68
-13.19 46.25
-12.66 48.55
-12.26 50.28
-11.92 52.11
-11.89 52.74
-11.89 54.01
-11.89 55.68
-12.05 58.94
-12.35 63.04
-12.62 67.31
-13.45 69.11
-14.19 71.18
-15.05 72.85
-15.69 73.75
-16.35 74.31
-17.09 74.71
-17.49 74.85
-18.29 74.98
-24.32 75.31
-27.46 75.51
-28.32 75.51
-31.46 75.61
-35.96 75.68
-36.56 75.41
-37.59 74.85
-38.49 74.21
-39.02 73.78
-40.82 73.08
-41.62 72.44
-42.59 71.38
-43.42 69.41
-44.29 65.24
-45.09 62.81
-45.59 61.05
-45.93 59.81
-46.04 59.05
-46.11 57.91
-46.18 56.21
-46.22 49.99
-46.24 49.94
-46.60 43.54
-47.07 36.34
-47.62 27.84
-47.91 23.48
-48.24 18.41
-49.17 16.64
-49.57 14.84
-49.87 12.98
-50.07 11.21
-50.27 9.34
-50.47 5.97
-50.58 3.87
-50.51 2.07
-50.41 0.21
-50.31 -0.39
-50.51 -0.89
-50.65 -3.22
-50.81 -5.16
-49.75 -5.66
-49.70 -7.35
-49.60 -9.22
-49.40 -11.25
-49.13 -12.49
-48.43 -14.02
-47.57 -15.75
-46.30 -17.85
-45.17 -18.96
-43.94 -20.05
-42.94 -20.66
-41.67 -21.36
-40.34 -21.89
-38.38 -22.42
-33.75 -23.65
-31.51 -24.25
-30.36 -25.38
-27.00 -25.27
-23.90 -25.00
-21.53 -24.76
-17.35 -24.76
-15.74 -24.16
-14.50 -23.59
-13.27 -22.89
-12.24 -22.36
-10.87 -21.37
-9.80 -20.64
-8.47 -19.54
-7.14 -18.25
-6.15 -17.14
-5.36 -16.08
-4.42 -14.76
-3.19 -12.87
-2.04 -10.89
-0.84 -8.51
0.33 -6.24
1.34 -4.01
2.58 -1.46
3.45 0.20
3.45 2.46
3.63 4.90
4.85 7.44
7.28 12.27
9.58 17.00
17.85 33.60
19.12 34.11
19.75 34.61
21.55 36.94
23.39 39.41
24.49 40.67
25.86 41.84
27.06 42.64
28.82 43.40
31.26 44.24
33.22 44.77
34.79 45.01
36.29 45.03
38.86 44.84
41.03 44.47
42.42 44.10
43.32 43.73
44.12 43.30
44.92 42.70
46.22 41.40
48.09 39.34
49.42 37.70
50.56 36.11
51.69 34.20
52.29 32.50
52.76 30.47
52.86 29.60
52.86 28.06
53.06 27.63
53.40 27.23
54.10 26.69
53.99 12.14
53.49 0.54
53.16 -1.06
52.18 -0.97
51.48 -3.51
51.01 -5.07
50.51 -6.31
50.04 -7.24
49.48 -8.37
48.99 -9.04
48.45 -9.77
47.35 -10.84
44.89 -13.07
44.09 -13.80
42.32 -15.07
42.09 -15.24
41.92 -15.37
41.09 -17.01
37.42 -18.80
35.06 -19.44
-17.46 -33.16
-18.50 -32.69
-21.09 -32.76
-23.83 -33.09
-26.89 -33.76
-29.93 -34.55
-32.89 -35.69
-37.59 -38.09
-37.66 -38.19
-45.02 -39.99
-47.28 -41.80
-49.31 -43.56
-49.87 -44.19
-50.61 -45.09
-51.20 -45.89
-51.54 -46.50
-51.84 -47.09
-52.07 -47.60
-52.37 -48.59
-52.63 -49.50
-52.80 -50.33
-53.04 -51.49
-53.14 -52.50
-53.35 -56.29
-53.38 -58.45
-53.32 -61.79
-53.18 -65.19
-53.08 -69.45
-53.05 -71.25
-52.02 -74.71
-50.62 -77.18
-49.60 -78.10
-48.75 -78.71
-47.79 -79.21
-45.88 -79.90
-44.08 -80.34
-40.92 -80.93
-38.18 -81.30
-36.67 -81.50
-34.31 -81.70
-32.44 -81.83
-31.41 -81.89
-29.96 -81.86
-28.17 -81.63
-25.97 -81.10
-23.55 -80.32
-21.05 -79.25
-17.78 -77.84
-15.29 -76.74
-13.15 -75.76
-7.75 -73.24
-2.52 -70.72
2.02 -68.40
2.58 -68.14
8.92 -64.04
14.45 -60.50
18.08 -58.14
19.24 -57.44
20.60 -56.51
21.30 -55.63
23.04 -53.53
24.87 -51.19
26.72 -49.51
27.18 -50.26
27.70 -49.85
28.41 -49.32
29.23 -48.83
29.96 -48.42
30.77 -48.11
31.50 -47.87
32.23 -47.74
33.05 -47.61
33.80 -47.61
34.68 -47.65
35.85 -47.85
37.31 -48.18
38.32 -48.50
39.51 -48.90
39.88 -47.86
40.70 -48.37
45.02 -50.43
48.17 -51.87
49.59 -52.50
51.29 -53.06
52.89 -53.37
54.62 -53.52
56.25 -53.55
56.48 -53.62
60.14 -53.44
61.48 -53.31
64.27 -52.23
66.59 -51.10
69.45 -49.51
72.09 -47.88
73.86 -46.61
75.64 -44.91
77.17 -43.11
77.94 -41.98
78.71 -40.51
79.44 -38.88
80.07 -36.98
80.44 -35.05
80.64 -33.31
80.91 -31.18
80.91 -31.18
81.20 -28.78
81.27 -27.85
81.47 -24.75
81.84 -18.01
82.40 -9.02
82.74 -3.68
82.80 -0.78
83.06 5.70
83.33 11.00
83.50 15.50
83.70 20.53
83.90 25.96
84.00 30.69
83.96 33.86
83.82 36.09
83.45 38.63
83.11 39.99
82.60 40.92
81.90 41.81
80.53 43.27
79.30 44.81
78.40 46.61
77.20 49.17
75.67 52.41
74.10 55.87
72.47 59.11
70.67 62.24
69.00 64.71
67.47 66.78
66.04 68.35
64.87 69.31
63.77 70.05
61.68 70.95
58.39 71.78
55.82 71.95
52.29 72.09
45.96 72.41
39.23 72.78
32.80 73.17
26.63 73.47
24.10 73.60
21.47 73.60
18.80 73.53
16.90 73.27
15.67 72.89
14.97 72.57
14.51 72.27
13.80 71.71
13.03 70.97
12.10 70.01
11.73 69.49
10.96 68.66
9.90 66.26
8.00 62.19
3.06 51.63
1.23 47.82
-0.70 43.66
-2.49 39.69
-3.19 37.95
-4.66 34.80
-5.99 32.16
-7.67 28.51
-9.25 25.28
-9.85 23.92
-10.42 24.09
-10.98 23.39
-12.08 21.33
-12.45 20.66
-12.51 20.53
-12.61 20.40
-13.64 19.98
-13.88 19.93
-14.72 19.87
-15.74 20.02
-16.81 20.43
-17.71 20.97
-18.45 21.70
-18.91 22.37
-19.19 23.20
-19.23 23.43
-19.15 23.93
"""
coords_str_3 = """
"""
# --- End Zone Coordinates ---

# --- Zone Setup (Now as Lines) ---
line_points_1 = parse_coords_string(coords_str_1, height=LINE_HEIGHT)
if len(line_points_1) >= 2:
    line_mesh_1 = Mesh(vertices=line_points_1, mode='line', thickness=LINE_THICKNESS)
    game_over_zone_line = Entity(
        model=line_mesh_1,
        color=color.green,
        visible=True,
        double_sided=True
    )
else:
    print("Warning: Not enough points to create Green Zone line.")
    game_over_zone_line = None

line_points_2 = parse_coords_string(coords_str_2, height=LINE_HEIGHT)
if len(line_points_2) >= 2:
    line_mesh_2 = Mesh(vertices=line_points_2, mode='line', thickness=LINE_THICKNESS)
    second_trigger_zone_line = Entity(
        model=line_mesh_2,
        color=color.red,
        visible=True,
        double_sided=True
    )
else:
    print("Warning: Not enough points to create Red Zone line.")
    second_trigger_zone_line = None

line_points_3 = parse_coords_string(coords_str_3, height=LINE_HEIGHT)
if len(line_points_3) >= 2:
    line_mesh_3 = Mesh(vertices=line_points_3, mode='line', thickness=LINE_THICKNESS)
    third_trigger_zone_line = Entity(
        model=line_mesh_3,
        color=color.blue,
        visible=True,
        double_sided=True
    )
else:
     print("Warning: Not enough points to create Blue Zone line.")
     third_trigger_zone_line = None

# --- End Zone Setup ---

def update():
    move_x_ind = held_keys['d'] - held_keys['a']
    move_z_ind = held_keys['w'] - held_keys['s']
    new_pos_x = indicator.position.x + move_x_ind * indicator_move_speed * time.dt
    new_pos_z = indicator.position.z + move_z_ind * indicator_move_speed * time.dt
    indicator.position = Vec3(new_pos_x, LINE_HEIGHT, new_pos_z)

    move_x_cam = held_keys['right arrow'] - held_keys['left arrow']
    move_z_cam = held_keys['up arrow'] - held_keys['down arrow']
    movement_vector_cam = Vec3(move_x_cam, 0, move_z_cam)
    if movement_vector_cam.length() > 1:
        movement_vector_cam = movement_vector_cam.normalized()
    camera.position += movement_vector_cam * cam_move_speed * time.dt

    coordinate_display_text.text = f'<b>X: {indicator.position.x:.1f}, Z: {indicator.position.z:.1f}</b>'

# --- Input function with Esc to exit ---
def input(key):
    global confirmation_text

    if key == 'escape':
        exit()

    if key == 'scroll up':
        camera.fov -= cam_zoom_speed
        camera.fov = clamp(camera.fov, cam_min_fov, cam_max_fov)
    elif key == 'scroll down':
        camera.fov += cam_zoom_speed
        camera.fov = clamp(camera.fov, cam_min_fov, cam_max_fov)

    if key == 'space':
        x_coord = indicator.position.x
        z_coord = indicator.position.z
        coords_string = f"{x_coord:.2f} {z_coord:.2f}"

        try:
            with open(COORDS_FILENAME, 'a') as f:
                f.write(coords_string + '\n')
            print(f"Saved coordinates to {COORDS_FILENAME}: {coords_string}")

            if confirmation_text:
                destroy(confirmation_text)

            confirmation_text = Text(
                text='Saved!',
                position=(-0.45, -0.38),
                origin=(-0.5, -0.5),
                scale=2.0,
                color=color.green,
                background=True,
                parent=camera.ui
            )
            invoke(lambda: destroy(confirmation_text), delay=2)

        except IOError as e:
            print(f"Error writing to file {COORDS_FILENAME}: {e}")
            if confirmation_text:
                destroy(confirmation_text)
            confirmation_text = Text(
                text='Save Error!',
                position=(-0.45, -0.38),
                origin=(-0.5, -0.5),
                scale=2.0,
                color=color.red,
                background=True,
                parent=camera.ui
            )
            invoke(lambda: destroy(confirmation_text), delay=3)

# --- Camera Setup ---
camera.orthographic = True
camera.position = (0, 60, 0)
camera.rotation = (90, 0, 0)
camera.fov = cam_max_fov
mouse.locked = False

# --- Run the application ---
app.run()